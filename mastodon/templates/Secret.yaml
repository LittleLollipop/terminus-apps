
apiVersion: v1
kind: Secret
metadata:
  name: mastodon-default
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: mastodon
    helm.sh/chart: mastodon-0.1.2
    app.kubernetes.io/instance: mastodon
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: mastodon
data:
  MASTODON_ADMIN_PASSWORD: "{{ .Values.adminPassword }}"
  SECRET_KEY_BASE: "YU8zYVFaYVBRVw=="
  OTP_SECRET: "S3VuYm5nNkRYRQ=="
---
apiVersion: v1
kind: Secret
metadata:
  name: mastodon-redis
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-17.3.16
    app.kubernetes.io/instance: mastodon
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  redis-password: "RVI4d3JTdTAwNQ=="
---
apiVersion: v1
kind: Secret
metadata:
  name: mastodon-postgresql
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.5
    app.kubernetes.io/instance: mastodon
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgres-password: "a2FLa2J1T0F5OQ=="
  password: "QWVucEp5T3ZLag=="
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
apiVersion: v1
kind: Secret
metadata:
  name: mastodon-minio
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-11.10.24
    app.kubernetes.io/instance: mastodon
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  root-user: "YWRtaW4="
  root-password: "OVdadHN0WlJUZg=="
  key.json: ""